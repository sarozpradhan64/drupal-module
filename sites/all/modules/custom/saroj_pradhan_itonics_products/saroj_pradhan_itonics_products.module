<?php

/**
 * Constants
 */
define('ROUTE_PREFIX', 'admin/content/itonics-products');

/**
 * Implements hook_permission().
 */
function saroj_pradhan_itonics_products_permission()
{
  return array(

    'list itonics products' => array(
      'title' => t('List ITONICS products')
    ),
    'create itonics products' => array(
      'title' => t('Create ITONICS products')
    ),
    'view itonics products' => array(
      'title' => t('View ITONICS products'),
    ),
    'edit itonics products' => array(
      'title' => t('Edit ITONICS products'),
    ),
    'delete itonics products' => array(
      'title' => t('Delete ITONICS products'),
    ),
  );
}

/**
 * 
 * hook menu
 */
function saroj_pradhan_itonics_products_menu()
{
  $items = array();

  // index 
  $items[ROUTE_PREFIX . ''] = array(
    'title' => 'ITONICS Products',
    'description' => 'Manage ITONICS products',
    'page callback' => 'saroj_pradhan_itonics_products_list',
    'access arguments' => array('list itonics products'),
    'type' => MENU_NORMAL_ITEM,
  );

  $items[ROUTE_PREFIX . '/add'] = array(
    'title' => 'Add Product',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('saroj_pradhan_itonics_products_form'),
    'access arguments' => array('create itonics products'),
    'type' => MENU_LOCAL_ACTION,
  );

  $items[ROUTE_PREFIX . '/%/show'] = array(
    'title' => 'Show Product',
    'page callback' => 'saroj_pradhan_itonics_products_show',
    // The 3 --> third argument from the URL.
    'page arguments' => array(3),
    'access arguments' => array('view itonics products'),
    'type' => MENU_CALLBACK,
  );

  $items[ROUTE_PREFIX . '/%/edit'] = array(
    'title' => 'Edit Product',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('saroj_pradhan_itonics_products_form', 3),
    'access arguments' => array('edit itonics products'),
    'type' => MENU_CALLBACK,
  );

  $items[ROUTE_PREFIX . '/%/delete'] = array(
    'title' => 'Delete Product',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('saroj_pradhan_itonics_products_delete_form', 3),
    'access arguments' => array('delete itonics products'),
    'type' => MENU_CALLBACK,
  );

  return $items;
}



/**
 * Impplements hook_init()
 */

function saroj_pradhan_itonics_products_init()
{
  if (module_exists('libraries')) {
    // Loading Tinymce 
    libraries_load('tinymce');
  }

  // jquery date picker 
  drupal_add_library('system', 'ui.datepicker');


  if (path_is_admin(ROUTE_PREFIX . '/*')) {
    // drupal_add_css(drupal_get_path('module', 'saroj_pradhan_itonics_products') . '/css/style.css');
    // drupal_add_js(drupal_get_path('module', 'saroj_pradhan_itonics_products') . '/js/multi-select-init.js');
    // drupal_add_js(drupal_get_path('module', 'saroj_pradhan_itonics_products') . '/js/multi-select.js');
    //   drupal_add_js(drupal_get_path('module', 'saroj_pradhan_itonics_products') . '/js/script.js');
  }
}



/**
 * Products List 
 */
function saroj_pradhan_itonics_products_list()
{
  $header = array(
    array('data' => t('ID'), 'field' => 'id'),
    array('data' => t('Image'), 'field' => 'image_fid'),
    array('data' => t('Title'), 'field' => 'title'),
    array('data' => t('Type'), 'field' => 'type'),
    array('data' => t('Owner Email'), 'field' => 'owner_email'),
    array('data' => t('Expiry Date'), 'field' => 'expiry_date'),
    array('data' => t('Operations')),
  );

  $query = db_select('saroj_pradhan_itonics_products', 'p')
    ->extend('PagerDefault')
    ->extend('TableSort');

  $query->fields('p', array('id', 'image_fid', 'title', 'type', 'owner_email', 'expiry_date'));

  $result = $query
    ->limit(10)
    ->orderByHeader($header)
    ->execute();

  $rows = array();
  foreach ($result as $product) {

    $image = '';
    if ($product->image_fid) {
      $file = file_load($product->image_fid);
      if ($file) {
        $image = theme('image_style', array(
          'style_name' => 'thumbnail',
          'path' => $file->uri,
          'width' => 50,
          'height' => 50,
          'alt' => $product->title,
        ));
        if (user_access('view itonics products')) {
          $image = l($image, ROUTE_PREFIX . "/{$product->id}/show", array('html' => TRUE));
        }
      }
    }

    $rows[] = array(
      $product->id,
      $image,
      $product->title,
      ucfirst($product->type),
      $product->owner_email,
      date('Y-m-d', $product->expiry_date),
      implode(" | ", array_filter([
        user_access('view itonics products') ?  l(t('View'), ROUTE_PREFIX . "/$product->id/show") : null,
        user_access('edit itonics products') ? l(t('Edit'), ROUTE_PREFIX . "/$product->id/edit") : null,
        user_access('delete itonics products') ? l(t('Delete'), ROUTE_PREFIX . "/$product->id/delete") : null,
      ]))
    );
  }

  $build['product_table'] = array(
    '#theme' => 'table',
    '#header' => $header,
    '#rows' => $rows,
    '#empty' => t('No products available.'),
  );

  $build['product_pager'] = array('#theme' => 'pager');

  return $build;
}


/**
 * Product form to handle both create and edit view
 */
function saroj_pradhan_itonics_products_form($form, &$form_state, $product_id = NULL)
{
  $form = array();

  if ($product_id) {
    $product = db_query(
      "SELECT * FROM saroj_pradhan_itonics_products WHERE id = :id",
      array(':id' => $product_id)
    )->fetchObject();
    if ($product) {
      $form['id'] = array(
        '#type' => 'value',
        '#value' => $product_id,
      );
    }
  }


  $form['title'] = array(
    '#type' => 'textfield',
    '#title' => t('Title'),
    '#required' => TRUE,
    '#default_value' => isset($product) ? $product->title : '',
  );


  $form['image'] = array(
    '#type' => 'managed_file',
    '#title' => t('Image'),
    '#upload_location' => 'public://itonics_products/',
    '#description' => t('Choose Product Image.'),
    '#upload_validators' => array(
      'file_validate_extensions' => array('png gif jpg jpeg'),
    ),
  );

  if (isset($product) && $product->image_fid) {
    $file = file_load($product->image_fid);
    if ($file) {
      $form['current_image'] = array(
        '#markup' => theme('image_style', array(
          'style_name' => 'thumbnail',
          'path' => $file->uri,
        )),
      );
    }
  }

  $form['summary'] = array(
    '#type' => 'textarea',
    '#title' => t('Summary'),
    '#default_value' => isset($product) ? $product->summary : '',
  );


  $form['description'] = array(
    '#type' => 'text_format',
    '#title' => t('Description'),
    '#default_value' => isset($product) ? $product->description : '',
    '#format' => 'full_html',
  );


  $category_options = array(
    'laptop' => t('Laptop'),
    'mobile' => t('Mobile'),
    'books' => t('Books'),
    'toys' => t('Toys'),
    'clothings' => t('Clothings'),
  );

  $form['category'] = array(
    '#type' => 'select',
    '#title' => t('Category'),
    '#options' => $category_options,
    '#multiple' => TRUE,
    '#required' => TRUE,
    '#default_value' => isset($product) ? unserialize($product->category) : array(),
    '#attributes' => array('class' => array('multiselect')),
  );


  $type_options = array(
    'new' => t('New'),
    'trending' => t('Trending'),
    'popular' => t('Popular'),
  );

  $form['type'] = array(
    '#type' => 'radios',
    '#title' => t('Type'),
    '#options' => $type_options,
    '#required' => TRUE,
    '#default_value' => isset($product) ? $product->type : '',
  );

  $form['owner_email'] = array(
    '#type' => 'textfield',
    '#title' => t('Owner Email'),
    '#required' => TRUE,
    '#default_value' => isset($product) ? $product->owner_email : '',
  );

  $form['expiry_date'] = array(
    '#type' => 'date',
    '#title' => t('Expiry Date'),
    '#required' => TRUE,
    '#default_value' => isset($product, $product->expiry_date) ? array(
      'day' => date('d', $product->expiry_date),
      'month' => date('m', $product->expiry_date),
      'year' => date('Y', $product->expiry_date)
    ) : '',
    '#attributes' => array('class' => array('datepicker')),
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => isset($product) ? t('Update Product') : t('Save Product'),
  );

  return $form;
}

/** 
 * Product form validation
 */
function saroj_pradhan_itonics_products_form_validate($form, &$form_state)
{
  // owner email validation 
  if (!valid_email_address($form_state['values']['owner_email'])) {
    form_set_error('owner_email', t('Invalid Owner Email'));
  }
}


/**
 * Handle product form submission
 */

function saroj_pradhan_itonics_products_form_submit($form, &$form_state)
{
  $values = $form_state['values'];
  $product_id = $values['id'] ?? null;
  $product = new stdClass();
  $product->title = $values['title'];
  $product->summary = $values['summary'];
  $product->description = $values['description']['value'];
  $product->category = serialize($values['category']);
  $product->type = $values['type'];
  $product->owner_email = $values['owner_email'];

  // strtotime('Y-m-d')
  // $product->expiry_date = strtotime($values['expiry_date']);
  $product->expiry_date = strtotime($values['expiry_date']['year'] . "-" . $values['expiry_date']['month'] . "-" . $values['expiry_date']['day']);

  // Handle image upload
  if (isset($values['image'])) {
    $file = file_load($values['image']);
    if ($file) {
      $file->status = FILE_STATUS_PERMANENT;
      file_save($file);
      $product->image_fid = $file->fid;
    }
  }
  // update product 
  if ($product_id) {
    $product->id = $product_id;
    drupal_write_record('saroj_pradhan_itonics_products', $product, 'id');
    drupal_set_message(t('Product updated successfully'));
  } else {
    // create product
    drupal_write_record('saroj_pradhan_itonics_products', $product);
    drupal_set_message(t('Product added successfully'));
  }
  $form_state['redirect'] = ROUTE_PREFIX;
}


/**
 * Show Product Detail view
 */
function saroj_pradhan_itonics_products_show($product_id)
{
  $css = '
  .product-detail {
    max-width: 800px;
    margin: 20px auto;
    padding: 15px;
    background: #fff;
    border: 1px solid #ddd;
    border-radius:4px;
    }

  .product-detail h2 {
    color: #333;
    margin-bottom: 15px;
    }

  .product-detail .product-info{
    margin:16px 0;
    display:flex;
    flex-wrap:wrap;
    gap:10px;
  }

  .product-detail p {
    margin: 10px 0;
  }

  .product-detail img {
    margin: 15px 0;
  }
';

  drupal_add_css($css, array('type' => 'inline'));

  $product = db_select('saroj_pradhan_itonics_products', 'p')
    ->fields('p')
    ->condition('id', $product_id)
    ->execute()
    ->fetchObject();

  if (!$product) {
    drupal_not_found();
    return;
  }


  // Loading image 
  if ($product->image_fid) {
    $file = file_load($product->image_fid);
    if ($file) {
      $image = theme('image_style', array(
        'style_name' => 'product_image',
        'path' => $file->uri,
        'width' => 250,
        'height' => 250,
        'alt' => $product->title,
      ));
    }
  }

  // format the expiry date 
  $expiry_date_formatted = $product->expiry_date ?  date('Y-m-d', $product->expiry_date) : "";

  $body = array();
  $body = '<div class="product-detail">';

  $body .= '<h2>' . check_plain($product->title) . '</h2>';
  $body .= '<div class="product-info">';
  $body .= '<div><strong>Category:</strong> ' . implode(', ', unserialize($product->category)) . "</div>";
  $body .= '<div><strong>Owner Email:</strong> ' . check_plain($product->owner_email) . "</div>";
  $body .= '<div><strong>Type:</strong> ' . check_plain($product->type) . "</div>";
  $body .= '<div><strong>Expiry Date:</strong> ' . check_plain($expiry_date_formatted) . '</div>';
  $body .= '</div>';
  if (isset($image)) {
    $body .= '<div>' . $image . '</div>';
  }
  $body .= '<p><strong>Summary:</strong> ' . check_plain($product->summary) . '</p>';
  $body .= '<p><strong>Description:</strong> ' . check_markup($product->description, 'filtered_html') . '</p>';
  $body .= '</div>';

  return $body;
}


/**
 * Product Delete Dialog.
 */
function saroj_pradhan_itonics_products_delete_form($form, &$form_state, $product_id)
{
  $form['id'] = array(
    '#type' => 'value',
    '#value' => $product_id,
  );

  return confirm_form(
    $form,
    t('This will permanently remove the product !'),
    ROUTE_PREFIX,
    t('Are you sure you want to delete this product.'),
    t('Yes, Delete'),
    t('Cancel')
  );
}

/**
 * Handle Product Delete.
 */
function saroj_pradhan_itonics_products_delete_form_submit($form, &$form_state)
{
  if ($form_state['values']['id']) {
    $product = db_select('saroj_pradhan_itonics_products', 'p')
      ->fields('p')
      ->condition('id', $form_state['values']['id'])
      ->execute()
      ->fetchObject();

    if ($product) {
      // Delete associated image
      if ($product->image_fid) {
        $file = file_load($product->image_fid);
        if ($file) {
          file_usage_delete($file, 'saroj_pradhan_itonics_products');
          file_delete($file);
        }
      }

      // Delete product
      db_delete('saroj_pradhan_itonics_products')
        ->condition('id', $product->id)
        ->execute();

      drupal_set_message(t('Product has been deleted.'));
    }
  }

  $form_state['redirect'] = ROUTE_PREFIX;
}
